{{- if .Values.enabled -}}
apiVersion: {{ template "apiVersion.Deployment" . }}
kind: Deployment
metadata:
  name: {{ include "auth-svc.name" . }}
  labels:
    {{- include "auth-svc.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  selector:
    matchLabels:
      {{- include "auth-svc.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "auth-svc.labels" . | nindent 8 }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        {{- if .Values.initContainers }}
          {{- include "common.tplvalues.render" (dict "value" .Values.initContainers "context" $) | nindent 8 }}
        {{- end }}
      {{- if .Values.image.pullSecrets }}
      {{- include "common.images.renderPullSecrets" (dict "images" (list .Values.image) "context" $) | nindent 6 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.args "context" $) | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.internalPort }}
            {{- if .Values.diagnosticMode.enabled }}
            - name: debug
              containerPort: {{ .Values.diagnosticMode.debug.internalPort }}
            {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.httpGet.path }}
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          {{- end }}
          env:
            - name: THIRD_PARTY_DATABASE__CONNECTION__PASSWORD
            {{- if not (empty .Values.config.db_secret) }}
              valueFrom:
                secretKeyRef:
                  name: '{{ .Values.config.db_secret.name }}'
                  key: '{{ .Values.config.db_secret.key }}'
            {{- else }}
              value: {{ .Values.config.db_password }}
            {{- end }}
          {{- range $envItem := .Values.env }}
            - name: {{ $envItem.name }}
              value: {{ $envItem.value }}
          {{- end }}
          volumeMounts:
            - name: auth-svc-config-volume
              mountPath: /opt/app/dist/config/production.json
              subPath: production.json
      volumes:
        - name: auth-svc-config-volume
          configMap:
            name: auth-svc-config
            items:
              - key: production.json
                path: production.json
{{- end -}}